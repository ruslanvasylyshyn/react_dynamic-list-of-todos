{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","selectUser","className","map","todo","key","id","cn","completed","type","readOnly","checked","title","onClick","userId","BASE_URL","getUsers","fetch","then","response","json","result","data","CurrentUser","state","selectedUser","this","props","user","setState","prevProps","clearUser","name","email","phone","React","Component","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"8WAKaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OACtB,yBAAKC,UAAU,YACb,sCAEA,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,kBACXF,EAAMG,KAAI,SAAAC,GAAI,OACb,wBACEC,IAAKD,EAAKE,GACVJ,UAAWK,IAAG,iBAAkB,CAC9B,0BAA2BH,EAAKI,UAChC,6BAA8BJ,EAAKI,aAIrC,+BACE,2BAAOC,KAAK,WAAWC,UAAQ,EAACC,QAASP,EAAKI,YAC9C,2BAAIJ,EAAKQ,QAGX,4BACEV,UAAU,iEAKVO,KAAK,SACLI,QAAS,WACPZ,EAAWG,EAAKU,UARpB,gBAWYV,EAAKU,iBCpCvBC,G,MAAW,kCAQJC,EAAW,SAAAF,GAAM,OAC5BG,MAAM,GAAD,OAAIF,EAAJ,kBAAsBD,IACxBI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,SCNdC,EAAb,4MACEC,MAAQ,CACNC,aAAc,IAFlB,uDAKE,WAAqB,IAAD,OAClBT,EAASU,KAAKC,MAAMb,QACjBI,MAAK,SAAAU,GAAI,OAAI,EAAKC,SAAS,CAC1BJ,aAAcG,SARtB,gCAYE,SAAmBE,GAAY,IAAD,OACxBA,EAAUhB,SAAWY,KAAKC,MAAMb,QAClCE,EAASU,KAAKC,MAAMb,QACjBI,MAAK,SAAAU,GAAI,OAAI,EAAKC,SAAS,CAC1BJ,aAAcG,SAhBxB,oBAqBE,WAAU,IACAH,EAAiBC,KAAKF,MAAtBC,aACAM,EAAcL,KAAKC,MAAnBI,UAER,OACE,yBAAK7B,UAAU,eACb,wBAAIA,UAAU,sBACZ,+CAEGuB,EAAanB,KAIlB,4BACEG,KAAK,SACLP,UAAU,wBACVW,QAAS,kBAAMkB,MAHjB,SAQA,wBAAI7B,UAAU,qBAAqBuB,EAAaO,MAChD,uBAAG9B,UAAU,sBAAsBuB,EAAaQ,OAChD,uBAAG/B,UAAU,sBAAsBuB,EAAaS,YA5CxD,GAAiCC,IAAMC,WCiDxBC,E,4MA9Cbb,MAAQ,CACNxB,MAAO,GACPsC,eAAgB,G,EAQlBrC,WAAa,SAACa,GACZ,EAAKe,SAAS,CACZS,eAAgBxB,K,EAIpBiB,UAAY,WACV,EAAKF,SAAS,CACZS,eAAgB,K,uDAbpB,WAAqB,IAAD,OFVpBrB,MAAM,GAAD,OAAIF,EAAJ,WACFG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,QEUpBJ,MAAK,SAAAlB,GAAK,OAAI,EAAK6B,SAAS,CAAE7B,e,oBAenC,WAAU,IAAD,EAC2B0B,KAAKF,MAA/BxB,EADD,EACCA,MAAOsC,EADR,EACQA,eAEf,OACE,yBAAKpC,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAUF,MAAOA,EAAOC,WAAYyB,KAAKzB,cAG3C,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,0BACZoC,EACC,kBAAC,EAAD,CACExB,OAAQwB,EACRP,UAAWL,KAAKK,YAEhB,0B,GAvCEI,IAAMC,WCHxBG,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.083f479e.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({ todos, selectUser }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={cn('TodoList__item', {\n              'TodoList__item--checked': todo.completed,\n              'TodoList__item--unchecked': !todo.completed,\n            })}\n          >\n\n            <label>\n              <input type=\"checkbox\" readOnly checked={todo.completed} />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n              \"\n              type=\"button\"\n              onClick={() => {\n                selectUser(todo.userId);\n              }}\n            >\n              {`User #${todo.userId}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    userId: PropTypes.number.isRequired,\n  })).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const getTodos = () => (\n  fetch(`${BASE_URL}/todos`)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n\nexport const getUsers = userId => (\n  fetch(`${BASE_URL}/users/${userId}`)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUsers } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    selectedUser: {},\n  }\n\n  componentDidMount() {\n    getUsers(this.props.userId)\n      .then(user => this.setState({\n        selectedUser: user,\n      }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      getUsers(this.props.userId)\n        .then(user => this.setState({\n          selectedUser: user,\n        }));\n    }\n  }\n\n  render() {\n    const { selectedUser } = this.state;\n    const { clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {selectedUser.id}\n          </span>\n        </h2>\n\n        <button\n          type=\"button\"\n          className=\"button button__center\"\n          onClick={() => clearUser()}\n        >\n          Clear\n        </button>\n\n        <h3 className=\"CurrentUser__name\">{selectedUser.name}</h3>\n        <p className=\"CurrentUser__email\">{selectedUser.email}</p>\n        <p className=\"CurrentUser__phone\">{selectedUser.phone}</p>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  clearUser: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => this.setState({ todos }));\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList todos={todos} selectUser={this.selectUser} />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}